# Generated by Django 5.2 on 2025-07-16 02:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CuratedCollection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Identifier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("identifier", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="IdentifierKind",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("kind", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Publisher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.TextField()),
                (
                    "kind",
                    models.CharField(
                        choices=[
                            ("gn", "Government - National"),
                            ("gs", "Government - State"),
                            ("gl", "Government - Local"),
                            ("ng", "Non-Governmental Organization"),
                            ("ac", "Academic"),
                        ],
                        max_length=2,
                    ),
                ),
                ("url", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.TextField()),
                ("country_code", models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name="TemporalCollection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.TextField()),
                (
                    "period",
                    models.CharField(
                        choices=[
                            ("dc", "Decennial"),
                            ("qq", "Quinquennial"),
                            ("be", "Biennial"),
                            ("an", "Annual"),
                            ("sa", "Semi-Annual"),
                            ("qu", "Quarterly"),
                            ("mo", "Monthly"),
                            ("wk", "Weekly"),
                            ("dy", "Daily"),
                            ("ot", "Other"),
                        ],
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataSet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True)),
                ("start_date", models.DateField(null=True)),
                ("end_date", models.DateField(null=True)),
                ("upstream_upload_time", models.DateTimeField()),
                ("source_url", models.URLField()),
                ("upstream_id", models.CharField(max_length=100)),
                ("license", models.CharField(max_length=100)),
                ("quality_score", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "curated_collections",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name="datasets",
                        to="catalog.curatedcollection",
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="catalog.publisher"
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="catalog.region"
                    ),
                ),
                (
                    "temporal_collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="datasets",
                        to="catalog.temporalcollection",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DataSetFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("original_url", models.URLField()),
                ("url", models.URLField()),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("csv", "Comma-Separated Values"),
                            ("geojson", "GeoJSON"),
                            ("json", "JSON Object"),
                            ("kml", "KML (GeoXML)"),
                            ("other", "Other File Type"),
                            ("parquet", "Parquet Database"),
                            ("shp", "Shapefile"),
                            ("sqlite", "SQLite Database"),
                            ("tsv", "Tab-Separated Values"),
                            ("xls", "Excel Spreadsheet"),
                            ("xml", "XML File"),
                        ]
                    ),
                ),
                ("file_size_mb", models.IntegerField()),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="catalog.dataset",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Crosswalk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "primary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crosswalks",
                        to="catalog.identifier",
                    ),
                ),
                (
                    "secondary",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="catalog.identifier"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="identifier",
            name="identifier_kind",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="catalog.identifierkind"
            ),
        ),
    ]
